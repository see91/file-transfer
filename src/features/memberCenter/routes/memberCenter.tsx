import { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import "../assets/index.less";
import "@/features/find/components/styles/dataIndicators.less";
import { useTranslation } from "react-i18next";
import { MyApply } from "../components/MyApply";
import { MyApprove } from "../components/MyApprove";
import { MyStrategy } from "../components/MyStrategy";
import { MyUpload } from "../components/MyUpload";
import imgUrl from "@/assets/img/avatar.png";
import editUrl from "../assets/edit_icon.svg";
import OvalButton from "@/components/Button/OvalButton";
import {
  getAvatarBase64String,
  getUserCache,
  getUserDetailCache,
} from "@/features/auth/api/getLoginedUserInfo";
import Emitter from "@/lib/emitter";
import dayjs from "dayjs";
import { getUserFileTotal, getUserShareTotal } from "../api/account";
import { USERINFO_UPDATE } from "@/lib/emitter-events";
import copy from "copy-to-clipboard";
import Alert from "@/components/Layout/Alert";
import { AlertColor, Tooltip } from "@mui/material";
import rank1 from "@/assets/img/medal/rank1.png";
import rank2 from "@/assets/img/medal/rank2.png";
import rank3 from "@/assets/img/medal/rank3.png";
import rank4 from "@/assets/img/medal/rank4.png";
import rank5 from "@/assets/img/medal/rank5.png";
import rank6 from "@/assets/img/medal/rank6.png";
import rank7 from "@/assets/img/medal/rank7.png";
import rank8 from "@/assets/img/medal/rank8.png";
import rank9 from "@/assets/img/medal/rank9.png";
import rank10 from "@/assets/img/medal/rank10.png";

const darkColor = "#98989A";
const rankIcon = {
  1: rank1,
  2: rank2,
  3: rank3,
  4: rank4,
  5: rank5,
  6: rank6,
  7: rank7,
  8: rank8,
  9: rank9,
  10: rank10,
};

export const MemberCenter = () => {
  const navigate = useNavigate();
  const [avatar, setAvatar] = useState(imgUrl);
  const [userDetailInfo, setUserDetails] = useState<any>({});
  const [active, setActive] = useState("2");
  const [dataFileTotal, setDataFileTotal] = useState({ list: [], total: 0 });
  const [dataShareTotal, setDataShareTotal] = useState({ list: [], total: 0 });
  const [user, setUser] = useState<any>();
  const [open, setOpen] = useState<boolean>(false);
  const [severity, setSeverity] = useState<AlertColor>("info");
  const [alertMessage, setAlertMessage] = useState<string>("");
  const { t } = useTranslation();
  const ContentComponent = () => {
    switch (active) {
      case "1":
        return <MyUpload />;
      case "2":
        return <MyApply />;
      case "3":
        return <MyApprove />;
      case "4":
        return <MyStrategy />;
    }
  };

  const getUserInfo = async () => {
    const user = getUserCache();
    setUser(user);

    // const userDetailInfo = getUserDetailCache();

    // const ary: any = [];
    // JSON.parse(userDetailInfo.ranking).forEach((x) => {
    //   ary.push(JSON.parse(x));
    // });
    // userDetailInfo.ranking = ary;
    // _fetch(userDetailInfo.account_id);

    // setUserDetails(userDetailInfo);

    // if (!!userDetailInfo && !!userDetailInfo.avatar) {
    //   const avatarStr = await getAvatarBase64String(userDetailInfo.avatar);
    //   if (!!avatarStr) {
    //     setAvatar(avatarStr);
    //   }
    // }
  };

  const _fetch = async (account_id) => {
    const params = {
      account_id,
      start_at: dayjs("2022.12.01 00:00:00").valueOf() / 1000,
      end_at: dayjs("2022.12.31 23:59:59").valueOf() / 1000,
    };
    const { data: dataFT } = await getUserFileTotal(params);
    const { data: dataST } = await getUserShareTotal(params);
    setDataFileTotal(dataFT);
    setDataShareTotal(dataST);
  };

  const _openLink = (type: string) => {
    if (userDetailInfo[type]) {
      let url = userDetailInfo[type];
      if (
        userDetailInfo[type].substr(0, 7).toLowerCase() == "http://" ||
        userDetailInfo[type].substr(0, 8).toLowerCase() == "https://"
      ) {
        url = url;
      } else {
        url = "http://" + url;
      }
      window.open(url);
    }
  };

  useEffect(() => {
    Emitter.on(USERINFO_UPDATE, (userinfo) => {
      if (!userinfo) {
        return;
      }
      // const newuserDetailInfo = Object.assign(
      //   { user_site: userinfo.userSite },
      //   userDetailInfo,
      //   userinfo,
      // );
      // setUserDetails(newuserDetailInfo);
    });
    window.setTimeout(async () => await getUserInfo(), 0);
  }, []);

  const editTitle = () => {
    return (
      <div
        style={{
          display: "flex",
          alignItems: "center",
        }}
      >
        <img src={editUrl} alt="" />
        <span style={{ marginLeft: "10px" }}>Edit</span>
      </div>
    );
  };

  const _share = () => {
    const { account_id } = userDetailInfo;
    try {
      copy(`https://filetransfer.nulink.org/creator/${account_id}`);
      setOpen(true);
      setAlertMessage("Copy Success!");
    } catch (error) {
      // nothing
    }
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <>
      <Alert
        open={open}
        severity={severity}
        onClose={handleClose}
        message={alertMessage}
      />
      <div className="member_center">
        <div className="member_center_top">
          <div className="member_center_left">
            <div className="left_avatar">
              <div
                className="left_avatar_item"
                style={{ background: `url(${avatar})` }}
              />
            </div>
            <div className="member_introduction">
              <div className="member_introduction_name">
                <span>{user?.name}</span>
                <OvalButton
                  title={editTitle()}
                  style={{ marginLeft: "10px" }}
                  onClick={() => {
                    navigate("/modifyData");
                  }}
                />
                {/* <ul className="ranking_area">
                  {userDetailInfo?.ranking &&
                    userDetailInfo?.ranking.length > 0 &&
                    userDetailInfo.ranking.map((x) => (
                      <li key={Math.random()}>
                        <Tooltip
                          title={`Week${x.period} Ranking No.${x.ranking}`}
                        >
                          <div className="se">
                            {rankIcon[x.ranking] ? (
                              <img src={rankIcon[x.ranking]} alt="" />
                            ) : (
                              <span>{x.ranking}</span>
                            )}
                          </div>
                        </Tooltip>
                      </li>
                    ))}
                </ul> */}
              </div>
              <div>{user?.accountAddress}</div>
              {/* <div className="member_introduction_text">
                {userDetailInfo?.profile || t("member-center-introduce")}
              </div> */}
              <div className="member_social">
                <div className="share_page" onClick={_share}>
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M13.4741 5.50781L5.47949 9.48642L13.4741 14.4908"
                      stroke="white"
                    />
                    <circle cx="6.05762" cy="9.64941" r="2.5" fill="white" />
                    <circle cx="13.9419" cy="14.3809" r="2.5" fill="white" />
                    <path
                      d="M16.4419 4.91895C16.4419 6.29966 15.3226 7.41895 13.9419 7.41895C12.5612 7.41895 11.4419 6.29966 11.4419 4.91895C11.4419 3.53823 12.5612 2.41895 13.9419 2.41895C15.3226 2.41895 16.4419 3.53823 16.4419 4.91895Z"
                      fill="white"
                    />
                  </svg>
                  <span>Share Page</span>
                </div>
                <span>Find me on</span>
                <ul>
                  <li
                    onClick={_openLink.bind(this, "facebook")}
                    className={userDetailInfo.facebook ? "pointer" : ""}
                  >
                    <svg
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M2.50195 12.0016C2.50312 16.9209 6.08036 21.1096 10.939 21.8806V14.8916H8.40195V12.0016H10.942V9.80156C10.8284 8.7591 11.1845 7.72015 11.9136 6.96649C12.6427 6.21283 13.6693 5.82257 14.715 5.90156C15.4655 5.91368 16.2141 5.98052 16.955 6.10156V8.56056H15.691C15.2558 8.50356 14.8183 8.64728 14.5017 8.95122C14.1851 9.25517 14.0237 9.68644 14.063 10.1236V12.0016H16.834L16.391 14.8926H14.063V21.8806C19.3174 21.0502 23.002 16.2513 22.4475 10.9606C21.8929 5.66993 17.2932 1.73949 11.9808 2.01673C6.66831 2.29398 2.5028 6.68186 2.50195 12.0016Z"
                        fill={userDetailInfo.facebook ? "#503A86" : darkColor}
                      />
                    </svg>
                  </li>
                  <li
                    onClick={_openLink.bind(this, "twitter")}
                    className={userDetailInfo.twitter ? "pointer" : ""}
                  >
                    <svg
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M20.495 6.68799C21.3914 6.15208 22.0622 5.30823 22.382 4.31399C21.5397 4.81379 20.618 5.16587 19.657 5.35499C18.3246 3.94552 16.2135 3.60251 14.5034 4.51764C12.7933 5.43277 11.9075 7.37948 12.341 9.26999C8.89062 9.09676 5.67598 7.4669 3.49702 4.78599C2.35986 6.74741 2.94097 9.25477 4.82502 10.516C4.14373 10.4941 3.47754 10.3096 2.88202 9.97799C2.88202 9.99599 2.88202 10.014 2.88202 10.032C2.88241 12.0751 4.32239 13.8351 6.32502 14.24C5.69308 14.4119 5.03022 14.4372 4.38702 14.314C4.95022 16.0613 6.56057 17.2583 8.39602 17.294C6.87585 18.4871 4.99849 19.1342 3.06602 19.131C2.72349 19.1315 2.38123 19.1118 2.04102 19.072C4.00341 20.333 6.28738 21.0023 8.62002 21C11.8653 21.0223 14.984 19.7429 17.2787 17.448C19.5734 15.1531 20.8526 12.0342 20.83 8.78899C20.83 8.60299 20.8257 8.41799 20.817 8.23399C21.6575 7.62659 22.3828 6.87414 22.959 6.01199C22.176 6.35905 21.3455 6.58691 20.495 6.68799Z"
                        fill={userDetailInfo.twitter ? "#503A86" : darkColor}
                      />
                    </svg>
                  </li>
                  <li
                    onClick={_openLink.bind(this, "instagram")}
                    className={userDetailInfo.instagram ? "pointer" : ""}
                  >
                    <svg
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M12.502 21.0409C10.042 21.0409 9.75195 21.0279 8.79195 20.9859C8.04332 20.9613 7.30439 20.8091 6.60695 20.5359C5.40026 20.0663 4.44609 19.1117 3.97695 17.9049C3.71426 17.2049 3.57257 16.4654 3.55795 15.7179C3.50195 14.7599 3.50195 14.4459 3.50195 12.0049C3.50195 9.53788 3.51495 9.24988 3.55795 8.29488C3.57289 7.5484 3.71457 6.80989 3.97695 6.11088C4.44558 4.90241 5.4013 3.94706 6.60995 3.47888C7.3086 3.21509 8.0473 3.07303 8.79395 3.05888C9.74895 3.00488 10.063 3.00488 12.502 3.00488C14.982 3.00488 15.267 3.01788 16.212 3.05888C16.9605 3.07315 17.7012 3.21519 18.402 3.47888C19.6103 3.94759 20.5658 4.90276 21.035 6.11088C21.3021 6.82008 21.4445 7.57013 21.456 8.32788C21.512 9.28588 21.512 9.59888 21.512 12.0389C21.512 14.4789 21.498 14.7989 21.456 15.7459C21.4411 16.4941 21.299 17.2343 21.036 17.9349C20.5656 19.1426 19.61 20.0975 18.402 20.5669C17.7022 20.8291 16.9631 20.9707 16.216 20.9859C15.261 21.0409 14.948 21.0409 12.502 21.0409ZM12.468 4.58788C10.022 4.58788 9.76795 4.59988 8.81295 4.64288C8.24294 4.65043 7.67843 4.75562 7.14395 4.95388C6.35471 5.25589 5.73018 5.87787 5.42495 6.66588C5.22517 7.20618 5.11996 7.77686 5.11395 8.35288C5.06095 9.32188 5.06095 9.57588 5.06095 12.0049C5.06095 14.4049 5.06995 14.6959 5.11395 15.6589C5.12291 16.2291 5.22805 16.7937 5.42495 17.3289C5.73063 18.1164 6.35505 18.7379 7.14395 19.0399C7.67807 19.2395 8.2428 19.3447 8.81295 19.3509C9.78095 19.4069 10.036 19.4069 12.468 19.4069C14.921 19.4069 15.175 19.3949 16.122 19.3509C16.6924 19.3439 17.2573 19.2387 17.792 19.0399C18.5764 18.7353 19.1969 18.1152 19.502 17.3309C19.7014 16.7901 19.8065 16.2192 19.813 15.6429H19.824C19.867 14.6869 19.867 14.4319 19.867 11.9889C19.867 9.54588 19.856 9.28888 19.813 8.33388C19.804 7.76433 19.6988 7.20039 19.502 6.66588C19.1976 5.88046 18.577 5.25918 17.792 4.95388C17.2574 4.75462 16.6924 4.6494 16.122 4.64288C15.155 4.58788 14.902 4.58788 12.468 4.58788ZM12.502 16.6239C10.6319 16.6251 8.94537 15.4996 8.22882 13.7723C7.51226 12.0451 7.90686 10.0562 9.22858 8.73334C10.5503 7.41047 12.5388 7.01415 14.2667 7.72921C15.9946 8.44428 17.1215 10.1299 17.122 11.9999C17.1192 14.5509 15.053 16.6189 12.502 16.6239ZM12.502 8.99788C10.8451 8.99788 9.50195 10.341 9.50195 11.9979C9.50195 13.6547 10.8451 14.9979 12.502 14.9979C14.1588 14.9979 15.502 13.6547 15.502 11.9979C15.4981 10.3426 14.1572 9.00173 12.502 8.99788ZM17.302 8.28489C16.7074 8.28268 16.2269 7.79947 16.228 7.20489C16.2291 6.61031 16.7114 6.12889 17.306 6.12889C17.9005 6.12889 18.3828 6.6103 18.384 7.20488C18.3842 7.49174 18.2702 7.76691 18.0672 7.96956C17.8642 8.17222 17.5888 8.28568 17.302 8.28489Z"
                        fill={userDetailInfo.instagram ? "#503A86" : darkColor}
                      />
                    </svg>
                  </li>
                  <li
                    onClick={_openLink.bind(this, "user_site")}
                    className={userDetailInfo.user_site ? "pointer" : ""}
                  >
                    <svg
                      width="23"
                      height="23"
                      viewBox="0 0 23 23"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        // fill-rule="evenodd"
                        // clip-rule="evenodd"
                        d="M11.5663 0.00490852L11.5663 0.00490828C11.5368 0.0024541 11.5074 0 11.4779 0C11.446 0 11.4166 0.00245426 11.3871 0.00490852C5.37662 0.0662651 0.522088 4.94779 0.5 10.9656V11.0049C0.5 17.0792 5.4257 22.0049 11.5 22.0049C17.5743 22.0049 22.5 17.0792 22.5 11.0049C22.5 4.9527 17.6111 0.0417224 11.5663 0.00490852ZM12.2535 7.86591C13.4389 7.81437 14.5875 7.62294 15.6845 7.31124C15.9447 8.2365 16.1066 9.20348 16.1631 10.1999H12.2535V7.86591ZM12.2535 1.60754V6.28782C13.2573 6.23873 14.234 6.07675 15.1667 5.8166C14.5163 4.24342 13.5714 2.8224 12.4032 1.61981C12.3786 1.61736 12.3535 1.61552 12.3283 1.61368L12.3283 1.61368L12.3283 1.61367L12.3283 1.61367L12.3283 1.61367L12.3283 1.61367L12.3283 1.61367L12.3283 1.61367L12.3282 1.61367L12.3282 1.61367L12.3282 1.61367L12.3282 1.61367L12.3282 1.61367L12.3282 1.61367L12.3282 1.61367C12.3031 1.61183 12.278 1.60999 12.2535 1.60754ZM10.7024 1.61245V6.278C9.72802 6.21419 8.78068 6.0473 7.87506 5.78715C8.54507 4.22133 9.50223 2.80767 10.6852 1.6149C10.6901 1.61245 10.6975 1.61245 10.7024 1.61245ZM10.7024 10.1999V7.85609C9.5415 7.78737 8.41745 7.58858 7.34003 7.26952C7.06515 8.20705 6.8909 9.18876 6.82954 10.1999H10.7024ZM5.25145 10.1999H2.10754C2.24989 8.52365 2.83155 6.9701 3.73472 5.65707C4.40718 6.07184 5.11401 6.43507 5.85274 6.74186C5.52387 7.84873 5.31772 9.00469 5.25145 10.1999ZM5.84784 15.295C5.5116 14.1635 5.30544 12.9781 5.24654 11.751H2.10263C2.23516 13.4592 2.82419 15.0397 3.74944 16.3699C4.417 15.9576 5.11647 15.5993 5.84784 15.295ZM6.82463 11.751H10.7024V14.1807C9.53905 14.247 8.41008 14.4482 7.33512 14.7673C7.05288 13.8028 6.87863 12.7916 6.82463 11.751ZM10.7024 20.3998V15.7613C9.72311 15.8251 8.77332 15.992 7.86278 16.257C8.52298 17.8057 9.46542 19.2071 10.6263 20.3925L10.7024 20.3998ZM12.2535 20.4023V15.749C13.2352 15.7981 14.1899 15.9527 15.1053 16.2006C14.4279 17.7811 13.456 19.2046 12.2535 20.4023ZM12.2535 11.751V14.1709C13.4241 14.2224 14.558 14.409 15.6428 14.7133C15.9201 13.766 16.0968 12.7744 16.1582 11.751H12.2535ZM17.7338 11.751H20.8974C20.7648 13.4297 20.1954 14.9833 19.2996 16.2987C18.6124 15.884 17.886 15.5207 17.1325 15.2189C17.4639 14.112 17.67 12.9511 17.7338 11.751ZM17.1767 6.7983C17.4909 7.88554 17.6823 9.02677 17.7387 10.1999V10.1975H20.8925C20.7526 8.55065 20.1881 7.02409 19.3119 5.72824C18.6345 6.14056 17.9203 6.49888 17.1767 6.7983ZM18.313 4.48884C17.7854 4.79808 17.2332 5.0705 16.6613 5.30611C16.2171 4.21151 15.6452 3.18318 14.9654 2.23583C16.2416 2.74141 17.3804 3.51696 18.313 4.48884ZM6.38532 5.25703C6.84181 4.16979 7.42347 3.14636 8.11067 2.20638C6.832 2.69969 5.68585 3.46296 4.74833 4.42749C5.27108 4.73918 5.81838 5.01651 6.38532 5.25703ZM4.76305 17.5995C5.27845 17.2927 5.81838 17.0203 6.3755 16.7847C6.82218 17.8523 7.38666 18.8585 8.05667 19.7863C6.80745 19.2929 5.68831 18.5419 4.76305 17.5995ZM16.6 16.7037C16.1336 17.8204 15.5348 18.8684 14.8231 19.828C16.1484 19.3298 17.3338 18.5395 18.2959 17.5357C17.7535 17.2191 17.1865 16.9418 16.6 16.7037Z"
                        fill={userDetailInfo.user_site ? "#503A86" : darkColor}
                      />
                    </svg>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div className="member_center_right">
            {/*           <div className="social_sites">
            <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M0.00195312 10.002C0.00311667 14.9214 3.58036 19.1101 8.43895 19.881V12.892H5.90195V10.002H8.44195V7.80204C8.32841 6.75958 8.68447 5.72064 9.41359 4.96698C10.1427 4.21332 11.1693 3.82306 12.215 3.90204C12.9655 3.91417 13.7141 3.98101 14.455 4.10205V6.56104H13.191C12.7558 6.50405 12.3183 6.64777 12.0017 6.95171C11.6851 7.25566 11.5237 7.68693 11.563 8.12404V10.002H14.334L13.891 12.893H11.563V19.881C16.8174 19.0506 20.502 14.2518 19.9475 8.96112C19.3929 3.67041 14.7932 -0.260027 9.48078 0.0172227C4.16831 0.294472 0.0027976 4.68235 0.00195312 10.002Z" fill="white" />
            </svg>
            <svg width="22" height="17" viewBox="0 0 22 17" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M18.995 2.68799C19.8914 2.15208 20.5622 1.30823 20.882 0.313989C20.0397 0.813791 19.118 1.16587 18.157 1.35499C16.8246 -0.0544839 14.7135 -0.397485 13.0034 0.517645C11.2933 1.43277 10.4075 3.37948 10.841 5.26999C7.39062 5.09676 4.17598 3.4669 1.99702 0.785989C0.859855 2.74741 1.44097 5.25477 3.32502 6.51599C2.64373 6.49409 1.97754 6.30963 1.38202 5.97799C1.38202 5.99599 1.38202 6.01399 1.38202 6.03199C1.38241 8.07514 2.82239 9.83507 4.82502 10.24C4.19308 10.4119 3.53022 10.4372 2.88702 10.314C3.45022 12.0613 5.06057 13.2583 6.89602 13.294C5.37585 14.4871 3.49849 15.1342 1.56602 15.131C1.22349 15.1315 0.881226 15.1118 0.541016 15.072C2.50341 16.333 4.78738 17.0023 7.12002 17C10.3653 17.0223 13.484 15.7429 15.7787 13.448C18.0734 11.1531 19.3526 8.03424 19.33 4.78899C19.33 4.60299 19.3257 4.41799 19.317 4.23399C20.1575 3.62659 20.8828 2.87414 21.459 2.01199C20.676 2.35905 19.8455 2.58691 18.995 2.68799Z" fill="white" />
            </svg>
            <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M9.00195 18.041C6.54195 18.041 6.25195 18.028 5.29195 17.986C4.54332 17.9614 3.80439 17.8092 3.10695 17.536C1.90026 17.0664 0.946094 16.1119 0.476953 14.905C0.214259 14.205 0.072571 13.4655 0.0579531 12.718C0.00195312 11.76 0.00195312 11.446 0.00195312 9.005C0.00195312 6.538 0.0149531 6.25 0.0579531 5.295C0.0728908 4.54853 0.214574 3.81001 0.476953 3.111C0.945584 1.90253 1.9013 0.947177 3.10995 0.479005C3.8086 0.215207 4.5473 0.0731492 5.29395 0.0590049C6.24895 0.00500488 6.56295 0.00500488 9.00195 0.00500488C11.482 0.00500488 11.767 0.0180049 12.712 0.0590049C13.4605 0.0732715 14.2012 0.215315 14.902 0.479005C16.1103 0.947708 17.0658 1.90288 17.535 3.111C17.8021 3.8202 17.9445 4.57026 17.956 5.328C18.012 6.28601 18.012 6.59901 18.012 9.03901C18.012 11.479 17.998 11.799 17.956 12.746C17.9411 13.4942 17.799 14.2344 17.536 14.935C17.0656 16.1427 16.11 17.0976 14.902 17.567C14.2022 17.8292 13.4631 17.9709 12.716 17.986C11.761 18.041 11.448 18.041 9.00195 18.041ZM8.96795 1.588C6.52195 1.588 6.26795 1.6 5.31295 1.643C4.74294 1.65056 4.17843 1.75575 3.64395 1.954C2.85471 2.25601 2.23018 2.878 1.92495 3.666C1.72517 4.2063 1.61996 4.77698 1.61395 5.353C1.56095 6.322 1.56095 6.576 1.56095 9.005C1.56095 11.405 1.56995 11.696 1.61395 12.659C1.62291 13.2292 1.72805 13.7938 1.92495 14.329C2.23063 15.1165 2.85505 15.738 3.64395 16.04C4.17807 16.2396 4.7428 16.3448 5.31295 16.351C6.28095 16.407 6.53595 16.407 8.96795 16.407C11.421 16.407 11.675 16.395 12.622 16.351C13.1924 16.3441 13.7573 16.2389 14.292 16.04C15.0764 15.7354 15.6969 15.1153 16.002 14.331C16.2014 13.7903 16.3065 13.2193 16.313 12.643H16.324C16.367 11.687 16.367 11.432 16.367 8.98901C16.367 6.54601 16.356 6.289 16.313 5.334C16.304 4.76446 16.1988 4.20052 16.002 3.666C15.6976 2.88058 15.077 2.2593 14.292 1.954C13.7574 1.75475 13.1924 1.64953 12.622 1.643C11.655 1.588 11.402 1.588 8.96795 1.588ZM9.00195 13.624C7.13194 13.6252 5.44537 12.4997 4.72882 10.7725C4.01226 9.04518 4.40686 7.05634 5.72858 5.73347C7.05031 4.4106 9.03882 4.01428 10.7667 4.72934C12.4946 5.4444 13.6215 7.12999 13.622 9C13.6192 11.5511 11.553 13.619 9.00195 13.624ZM9.00195 5.998C7.3451 5.998 6.00195 7.34115 6.00195 8.998C6.00195 10.6549 7.3451 11.998 9.00195 11.998C10.6588 11.998 12.002 10.6549 12.002 8.998C11.9981 7.34275 10.6572 6.00185 9.00195 5.998ZM13.802 5.28501C13.2074 5.2828 12.7269 4.79959 12.728 4.20501C12.7291 3.61043 13.2114 3.12901 13.806 3.12901C14.4005 3.12901 14.8828 3.61042 14.884 4.205C14.8842 4.49187 14.7702 4.76703 14.5672 4.96968C14.3642 5.17234 14.0888 5.2858 13.802 5.28501Z" fill="white" />
            </svg>
          </div> */}
            <div className="self_site">
              <p className="about-me">About me:</p>
              <div className="member_introduction_text">
                {userDetailInfo?.profile || t("member-center-introduce")}
              </div>
              {/* <svg
                width="22"
                height="23"
                viewBox="0 0 22 23"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M11.0663 0.00490852L11.0663 0.00490828C11.0368 0.0024541 11.0074 0 10.9779 0C10.946 0 10.9166 0.00245426 10.8871 0.00490852C4.87662 0.0662651 0.0220884 4.94779 0 10.9656V11.0049C0 17.0792 4.9257 22.0049 11 22.0049C17.0743 22.0049 22 17.0792 22 11.0049C22 4.9527 17.1111 0.0417224 11.0663 0.00490852ZM11.7535 7.86591C12.9389 7.81437 14.0875 7.62294 15.1845 7.31124C15.4447 8.2365 15.6066 9.20348 15.6631 10.1999H11.7535V7.86591ZM11.7535 1.60754V6.28782C12.7573 6.23873 13.734 6.07675 14.6667 5.8166C14.0163 4.24342 13.0714 2.8224 11.9032 1.61981C11.8786 1.61736 11.8535 1.61552 11.8283 1.61368L11.8283 1.61368L11.8283 1.61367L11.8283 1.61367L11.8283 1.61367L11.8283 1.61367L11.8283 1.61367L11.8283 1.61367L11.8282 1.61367L11.8282 1.61367L11.8282 1.61367L11.8282 1.61367L11.8282 1.61367L11.8282 1.61367L11.8282 1.61367C11.8031 1.61183 11.778 1.60999 11.7535 1.60754ZM10.2024 1.61245V6.278C9.22802 6.21419 8.28068 6.0473 7.37506 5.78715C8.04507 4.22133 9.00223 2.80768 10.1852 1.6149C10.1901 1.61245 10.1975 1.61245 10.2024 1.61245ZM10.2024 10.1999V7.85609C9.0415 7.78737 7.91745 7.58858 6.84003 7.26952C6.56515 8.20705 6.3909 9.18876 6.32954 10.1999H10.2024ZM4.75145 10.1999H1.60754C1.74989 8.52365 2.33155 6.9701 3.23472 5.65707C3.90718 6.07184 4.61401 6.43507 5.35274 6.74186C5.02387 7.84873 4.81772 9.00469 4.75145 10.1999ZM5.34784 15.295C5.0116 14.1635 4.80544 12.9781 4.74654 11.751H1.60263C1.73516 13.4592 2.32419 15.0397 3.24944 16.3699C3.917 15.9576 4.61647 15.5993 5.34784 15.295ZM6.32463 11.751H10.2024V14.1807C9.03905 14.247 7.91008 14.4482 6.83512 14.7673C6.55288 13.8028 6.37863 12.7916 6.32463 11.751ZM10.2024 20.3998V15.7613C9.22311 15.8251 8.27332 15.992 7.36278 16.257C8.02298 17.8057 8.96542 19.2071 10.1263 20.3925L10.2024 20.3998ZM11.7535 20.4023V15.749C12.7352 15.7981 13.6899 15.9527 14.6053 16.2006C13.9279 17.7811 12.956 19.2046 11.7535 20.4023ZM11.7535 11.751V14.1709C12.9241 14.2224 14.058 14.409 15.1428 14.7133C15.4201 13.766 15.5968 12.7744 15.6582 11.751H11.7535ZM17.2338 11.751H20.3974C20.2648 13.4297 19.6954 14.9833 18.7996 16.2987C18.1124 15.884 17.386 15.5207 16.6325 15.2189C16.9639 14.112 17.17 12.9511 17.2338 11.751ZM16.6767 6.7983C16.9909 7.88554 17.1823 9.02677 17.2387 10.1999V10.1975H20.3925C20.2526 8.55065 19.6881 7.02409 18.8119 5.72824C18.1345 6.14056 17.4203 6.49888 16.6767 6.7983ZM17.813 4.48884C17.2854 4.79808 16.7332 5.0705 16.1613 5.30611C15.7171 4.21151 15.1452 3.18318 14.4654 2.23583C15.7416 2.74141 16.8804 3.51696 17.813 4.48884ZM5.88532 5.25703C6.34181 4.16979 6.92347 3.14637 7.61067 2.20638C6.332 2.69969 5.18585 3.46297 4.24833 4.42749C4.77108 4.73918 5.31838 5.01651 5.88532 5.25703ZM4.26305 17.5995C4.77845 17.2927 5.31838 17.0203 5.8755 16.7847C6.32218 17.8523 6.88666 18.8585 7.55667 19.7863C6.30745 19.2929 5.18831 18.5419 4.26305 17.5995ZM16.1 16.7037C15.6336 17.8204 15.0348 18.8684 14.3231 19.828C15.6484 19.3298 16.8338 18.5395 17.7959 17.5357C17.2535 17.2191 16.6865 16.9418 16.1 16.7037Z"
                  fill="white"
                />
              </svg>
              <Link to={{ pathname: "//www.nulink.org" }} target="_blank">
                Nulink
              </Link> */}
            </div>
          </div>
        </div>
        <div className="member_center_tab">
          {/* <div
            className={
              active === "1"
                ? "member_center_tab_item active"
                : "member_center_tab_item"
            }
            onClick={() => {
              setActive("1");
            }}
          >
            {t<string>("member-center-a-tab-1")}
            <div className="line "></div>
          </div> */}
          <div
            className={
              active === "2"
                ? "member_center_tab_item active"
                : "member_center_tab_item"
            }
            onClick={() => {
              setActive("2");
            }}
          >
            {t<string>("member-center-a-tab-2")}
            <div className="line"></div>
          </div>
          <div
            className={
              active === "3"
                ? "member_center_tab_item active"
                : "member_center_tab_item"
            }
            onClick={() => {
              setActive("3");
            }}
          >
            {t<string>("member-center-a-tab-3")}
            <div className="line"></div>
          </div>
          {/* <div
            className={
              active === "4"
                ? "member_center_tab_item active"
                : "member_center_tab_item"
            }
            onClick={() => {
              setActive("4");
            }}
          >
            {t<string>("member-center-a-tab-4")}
            <div className="line"></div>
          </div> */}
        </div>
        <div className="member_center_content">{ContentComponent()}</div>
      </div>
    </>
  );
};
